name: Mirror PR to production for Preview

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [main]

jobs:
  mirror-pr:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ORG_GH_TOKEN }}

      - name: Setup GitHub CLI
        run: gh --version

      - name: Create or update mirror PR to production
        run: |
          # Check if mirror PR already exists
          MIRROR_PR=$(gh pr list --base production --head ${{ github.head_ref }} --json number --jq '.[0].number // empty')
          
          if [ -z "$MIRROR_PR" ]; then
            # Create new mirror PR
            echo "Creating new mirror PR..."
          
            # Create PR body content using printf to avoid shell parsing issues
            printf '%s\n' \
              "**🔗 Auto-generated mirror PR for Mintlify preview**" \
              "" \
              "**Original PR:** #${{ github.event.number }}" \
              "**Author:** @${{ github.event.pull_request.user.login }}" \
              "" \
              "## Purpose" \
              "This PR provides a Mintlify preview link for reviewing documentation changes." \
              "" \
              "## Preview Link" \
              "The Mintlify preview will be available once this PR is processed." \
              "" \
              "## ⚠️ Important Notes" \
              "- **Do not merge this PR directly**" \
              "- This PR will be auto-merged when the original PR #${{ github.event.number }} is merged" \
              "- Make all comments and reviews on the original PR #${{ github.event.number }}" \
              "" \
              "## Changes" \
              "${{ github.event.pull_request.body }}" > pr_body.txt

            # Escape the title properly to handle special characters and spaces
            ESCAPED_TITLE=$(printf '%s' "🔄 Preview: ${{ github.event.pull_request.title }}" | sed 's/"/\\"/g')

            gh pr create \
              --base production \
              --head "${{ github.head_ref }}" \
              --title "$ESCAPED_TITLE" \
              --body-file pr_body.txt \
              --draft
          
            echo "✅ Mirror PR created successfully"
          else
            echo "🔄 Mirror PR #$MIRROR_PR already exists and will be auto-updated"
          fi
        env:
          GH_TOKEN: ${{ secrets.ORG_GH_TOKEN }}

  cleanup-mirror-pr:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ORG_GH_TOKEN }}

      - name: Handle mirror PR when original is closed
        run: |
          # Find the mirror PR
          MIRROR_PR=$(gh pr list --base production --head ${{ github.head_ref }} --json number --jq '.[0].number // empty')
          
          if [ -n "$MIRROR_PR" ]; then
            if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
              echo "Original PR was merged, closing mirror PR #$MIRROR_PR (no need to merge)..."
              gh pr close $MIRROR_PR
              echo "✅ Mirror PR #$MIRROR_PR closed"
            else
              echo "Original PR was closed without merging, closing mirror PR #$MIRROR_PR..."
              gh pr close $MIRROR_PR
              echo "✅ Mirror PR #$MIRROR_PR closed"
            fi
          else
            echo "No mirror PR found for branch ${{ github.head_ref }}"
          fi
        env:
          GH_TOKEN: ${{ secrets.ORG_GH_TOKEN }}
