openapi: 3.0.1
info:
  title: AI Studio API
  description: This is the API for the AI Studio user and group management system.
  termsOfService: http://swagger.io/terms/
  contact:
    name: API Support
    url: http://www.swagger.io/support
    email: support@tyk.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
servers:
- url: //localhost:8080/api/v1
security:
- BearerAuth: []
paths:
  /analytics/chat-interactions-for-chat:
    get:
      tags:
      - Analytics
      summary: Get chat interactions for a specific chat
      description: Get the number of interactions for a specific chat over time
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: chat_id
        in: query
        description: Chat ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/chat-records-per-day:
    get:
      tags:
      - Analytics
      summary: Get chat records per day
      description: Get the total number of chat records per day for a given time period
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/chat-records-per-user:
    get:
      tags:
      - Analytics
      summary: Get chat records per user
      description: Get the total number of chat records per user for a given time
        period
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/cost-analysis:
    get:
      tags:
      - Analytics
      summary: Get cost analysis
      description: Get the total cost per day for a given time period
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/model-usage:
    get:
      tags:
      - Analytics
      summary: Get usage statistics for a specific model
      description: Get the usage statistics for a specific model over time
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: model_name
        in: query
        description: Model Name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/most-used-llm-models:
    get:
      tags:
      - Analytics
      summary: Get most used LLM models
      description: Get the usage count for each LLM model
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/token-usage-and-cost-for-app:
    get:
      tags:
      - Analytics
      summary: Get token usage and cost for a specific app
      description: Get the token usage and total cost for a specific app over time
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: app_id
        in: query
        description: App ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.MultiAxisChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/token-usage-for-app:
    get:
      tags:
      - Analytics
      summary: Get token usage for a specific app
      description: Get the token usage for a specific app over time
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: app_id
        in: query
        description: App ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/token-usage-per-app:
    get:
      tags:
      - Analytics
      summary: Get token usage per app
      description: Get the total token usage for each app
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/token-usage-per-user:
    get:
      tags:
      - Analytics
      summary: Get token usage per user
      description: Get the total token usage for each user
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/tool-calls-per-day:
    get:
      tags:
      - Analytics
      summary: Get tool calls per day
      description: Get the total number of tool calls per day for a given time period
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/tool-usage-statistics:
    get:
      tags:
      - Analytics
      summary: Get tool usage statistics
      description: Get the usage count for each tool
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/total-cost-per-vendor-and-model:
    get:
      tags:
      - Analytics
      summary: Get total cost per vendor and model
      description: "Get the total cost per vendor and model for a given time period,\
        \ including currency"
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/analytics.VendorModelCost'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/unique-users-per-day:
    get:
      tags:
      - Analytics
      summary: Get unique users per day
      description: Get the number of unique users per day
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /analytics/vendor-usage:
    get:
      tags:
      - Analytics
      summary: Get usage statistics for a specific vendor
      description: Get the usage statistics for a specific vendor over time
      parameters:
      - name: start_date
        in: query
        description: Start date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (YYYY-MM-DD)
        required: true
        schema:
          type: string
      - name: vendor
        in: query
        description: Vendor Name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analytics.ChartData'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /apps:
    get:
      tags:
      - apps
      summary: List all apps
      description: Get a list of all apps
      parameters:
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Page size
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.AppResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - apps
      summary: Create a new app
      description: Create a new app with the provided information
      requestBody:
        description: App information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.AppInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.AppResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: app
  /apps/{id}:
    get:
      tags:
      - apps
      summary: Get an app by ID
      description: Get details of an app by its ID
      parameters:
      - name: id
        in: path
        description: App ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.AppResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - apps
      summary: Delete an app
      description: Delete an app by its ID
      parameters:
      - name: id
        in: path
        description: App ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - apps
      summary: Update an app
      description: Update an existing app's information
      parameters:
      - name: id
        in: path
        description: App ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated app information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.AppInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.AppResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: app
  /apps/{id}/activate-credential:
    post:
      tags:
      - apps
      summary: Activate app credential
      description: Activate the credential associated with an app
      parameters:
      - name: id
        in: path
        description: App ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /apps/{id}/deactivate-credential:
    post:
      tags:
      - apps
      summary: Deactivate app credential
      description: Deactivate the credential associated with an app
      parameters:
      - name: id
        in: path
        description: App ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /apps/by-name:
    get:
      tags:
      - apps
      summary: Get app by name
      description: Get details of an app by its name
      parameters:
      - name: name
        in: query
        description: App name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.AppResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /apps/count:
    get:
      tags:
      - apps
      summary: Count all apps
      description: Get the total number of apps
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /apps/search:
    get:
      tags:
      - apps
      summary: Search apps
      description: Search for apps based on a search term
      parameters:
      - name: searchTerm
        in: query
        description: Search term
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.AppResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /catalogues:
    get:
      tags:
      - catalogues
      summary: List all catalogues
      description: Get a list of all catalogues with their associated LLM names
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.CatalogueResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - catalogues
      summary: Create a new catalogue
      description: Create a new catalogue with the provided information
      requestBody:
        description: Catalogue information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CatalogueInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: catalogue
  /catalogues/{id}:
    get:
      tags:
      - catalogues
      summary: Get a catalogue by ID
      description: Get details of a catalogue by its ID
      parameters:
      - name: id
        in: path
        description: Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - catalogues
      summary: Delete a catalogue
      description: Delete a catalogue by its ID
      parameters:
      - name: id
        in: path
        description: Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - catalogues
      summary: Update a catalogue
      description: Update an existing catalogue's information
      parameters:
      - name: id
        in: path
        description: Catalogue ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated catalogue information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CatalogueInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: catalogue
  /catalogues/{id}/llms:
    get:
      tags:
      - catalogues
      summary: List LLMs in a catalogue
      description: Get a list of all LLMs in a specific catalogue
      parameters:
      - name: id
        in: path
        description: Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.LLMResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - catalogues
      summary: Add an LLM to a catalogue
      description: Add an LLM to a specific catalogue
      parameters:
      - name: id
        in: path
        description: Catalogue ID
        required: true
        schema:
          type: integer
      requestBody:
        description: LLM to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CatalogueLLMInput'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: llm
  /catalogues/{id}/llms/{llmId}:
    delete:
      tags:
      - catalogues
      summary: Remove an LLM from a catalogue
      description: Remove an LLM from a specific catalogue
      parameters:
      - name: id
        in: path
        description: Catalogue ID
        required: true
        schema:
          type: integer
      - name: llmId
        in: path
        description: LLM ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /catalogues/search:
    get:
      tags:
      - catalogues
      summary: Search catalogues by name
      description: Search for catalogues using a name stub
      parameters:
      - name: name
        in: query
        description: Name stub to search for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.CatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /catalogues/search-by-stub:
    get:
      tags:
      - catalogues
      summary: Search catalogues by name stub
      description: Search for catalogues using a name stub
      parameters:
      - name: stub
        in: query
        description: Name stub to search for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.CatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /chat-history-records:
    get:
      tags:
      - chat-history
      summary: List chat history records
      description: List chat history records for a given user
      parameters:
      - name: user_id
        in: query
        description: User ID
        required: true
        schema:
          type: integer
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: page_size
        in: query
        description: Page size
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ChatHistoryRecordListResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    post:
      tags:
      - chat-history
      summary: Create a new chat history record
      description: Create a new chat history record with the given input
      requestBody:
        description: Chat History Record Input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ChatHistoryRecordInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ChatHistoryRecordResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      x-codegen-request-body-name: input
  /chat-history-records/{id}:
    get:
      tags:
      - chat-history
      summary: Get a chat history record
      description: Get a chat history record by its ID
      parameters:
      - name: id
        in: path
        description: Chat History Record ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ChatHistoryRecordResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    delete:
      tags:
      - chat-history
      summary: Delete a chat history record
      description: Delete a chat history record by its ID
      parameters:
      - name: id
        in: path
        description: Chat History Record ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /chats:
    get:
      tags:
      - chats
      summary: List all chats
      description: Get a list of all chats
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ChatResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - chats
      summary: Create a new chat
      description: Create a new chat with the provided information
      requestBody:
        description: Chat information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ChatInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ChatResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: chat
  /chats/{id}:
    get:
      tags:
      - chats
      summary: Get a chat by ID
      description: Get details of a chat by its ID
      parameters:
      - name: id
        in: path
        description: Chat ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ChatResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - chats
      summary: Delete a chat
      description: Delete a chat by its ID
      parameters:
      - name: id
        in: path
        description: Chat ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - chats
      summary: Update a chat
      description: Update an existing chat's information
      parameters:
      - name: id
        in: path
        description: Chat ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated chat information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ChatInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ChatResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: chat
  /chats/by-group:
    get:
      tags:
      - chats
      summary: Get chats by group ID
      description: Get a list of chats associated with a specific group
      parameters:
      - name: group_id
        in: query
        description: Group ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ChatResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /credentials:
    get:
      tags:
      - credentials
      summary: List all credentials
      description: Get a list of all credentials
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.CredentialResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - credentials
      summary: Create a new credential
      description: Create a new credential
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CredentialResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /credentials/{id}:
    get:
      tags:
      - credentials
      summary: Get a credential by ID
      description: Get details of a credential by its ID
      parameters:
      - name: id
        in: path
        description: Credential ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CredentialResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - credentials
      summary: Delete a credential
      description: Delete a credential by its ID
      parameters:
      - name: id
        in: path
        description: Credential ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - credentials
      summary: Update a credential
      description: Update an existing credential's information
      parameters:
      - name: id
        in: path
        description: Credential ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated credential information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CredentialInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CredentialResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: credential
  /credentials/{id}/activate:
    post:
      tags:
      - credentials
      summary: Activate a credential
      description: Activate a credential by its ID
      parameters:
      - name: id
        in: path
        description: Credential ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CredentialResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /credentials/{id}/deactivate:
    post:
      tags:
      - credentials
      summary: Deactivate a credential
      description: Deactivate a credential by its ID
      parameters:
      - name: id
        in: path
        description: Credential ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CredentialResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /credentials/active:
    get:
      tags:
      - credentials
      summary: List active credentials
      description: Get a list of all active credentials
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.CredentialResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /credentials/key/{keyId}:
    get:
      tags:
      - credentials
      summary: Get a credential by Key ID
      description: Get details of a credential by its Key ID
      parameters:
      - name: keyId
        in: path
        description: Credential Key ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CredentialResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /data-catalogues:
    get:
      tags:
      - data-catalogues
      summary: List all data catalogues
      description: Get a list of all data catalogues
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.DataCatalogueResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - data-catalogues
      summary: Create a new data catalogue
      description: Create a new data catalogue with the provided information
      requestBody:
        description: Data Catalogue information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DataCatalogueInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DataCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: dataCatalogue
  /data-catalogues/{id}:
    get:
      tags:
      - data-catalogues
      summary: Get a data catalogue by ID
      description: Get details of a data catalogue by its ID
      parameters:
      - name: id
        in: path
        description: Data Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DataCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - data-catalogues
      summary: Delete a data catalogue
      description: Delete a data catalogue by its ID
      parameters:
      - name: id
        in: path
        description: Data Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - data-catalogues
      summary: Update a data catalogue
      description: Update an existing data catalogue's information
      parameters:
      - name: id
        in: path
        description: Data Catalogue ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated data catalogue information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DataCatalogueInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DataCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: dataCatalogue
  /data-catalogues/{id}/datasources:
    post:
      tags:
      - data-catalogues
      summary: Add a datasource to a data catalogue
      description: Add a datasource to a specific data catalogue
      parameters:
      - name: id
        in: path
        description: Data Catalogue ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Datasource to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DataCatalogueDatasourceInput'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: datasource
  /data-catalogues/{id}/datasources/{datasourceId}:
    delete:
      tags:
      - data-catalogues
      summary: Remove a datasource from a data catalogue
      description: Remove a datasource from a specific data catalogue
      parameters:
      - name: id
        in: path
        description: Data Catalogue ID
        required: true
        schema:
          type: integer
      - name: datasourceId
        in: path
        description: Datasource ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /data-catalogues/{id}/tags:
    post:
      tags:
      - data-catalogues
      summary: Add a tag to a data catalogue
      description: Add a tag to a specific data catalogue
      parameters:
      - name: id
        in: path
        description: Data Catalogue ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Tag to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DataCatalogueTagInput'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: tag
  /data-catalogues/{id}/tags/{tagId}:
    delete:
      tags:
      - data-catalogues
      summary: Remove a tag from a data catalogue
      description: Remove a tag from a specific data catalogue
      parameters:
      - name: id
        in: path
        description: Data Catalogue ID
        required: true
        schema:
          type: integer
      - name: tagId
        in: path
        description: Tag ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /data-catalogues/by-datasource:
    get:
      tags:
      - data-catalogues
      summary: Get data catalogues by datasource
      description: Get a list of data catalogues associated with a specific datasource
      parameters:
      - name: datasourceId
        in: query
        description: Datasource ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.DataCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /data-catalogues/by-tag:
    get:
      tags:
      - data-catalogues
      summary: Get data catalogues by tag
      description: Get a list of data catalogues associated with a specific tag
      parameters:
      - name: tagName
        in: query
        description: Tag name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.DataCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /data-catalogues/search:
    get:
      tags:
      - data-catalogues
      summary: Search data catalogues
      description: Search for data catalogues using a query string
      parameters:
      - name: query
        in: query
        description: Search query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.DataCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /datasources:
    get:
      tags:
      - datasources
      summary: List all datasources
      description: Get a list of all datasources
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.DatasourceResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - datasources
      summary: Create a new datasource
      description: Create a new datasource with the provided information
      requestBody:
        description: Datasource information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DatasourceInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DatasourceResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: datasource
  /datasources/{id}:
    get:
      tags:
      - datasources
      summary: Get a datasource by ID
      description: Get details of a datasource by its ID
      parameters:
      - name: id
        in: path
        description: Datasource ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DatasourceResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - datasources
      summary: Delete a datasource
      description: Delete a datasource by its ID
      parameters:
      - name: id
        in: path
        description: Datasource ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - datasources
      summary: Update a datasource
      description: Update an existing datasource's information
      parameters:
      - name: id
        in: path
        description: Datasource ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated datasource information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DatasourceInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.DatasourceResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: datasource
  /datasources/by-tag:
    get:
      tags:
      - datasources
      summary: Get datasources by tag
      description: Get a list of datasources associated with a specific tag
      parameters:
      - name: tag
        in: query
        description: Tag name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.DatasourceResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /datasources/search:
    get:
      tags:
      - datasources
      summary: Search datasources
      description: Search for datasources using a query string
      parameters:
      - name: query
        in: query
        description: Search query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.DatasourceResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /filters:
    get:
      tags:
      - filters
      summary: List all filters
      description: Get a list of all filters
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.FilterResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    post:
      tags:
      - filters
      summary: Create a new filter
      description: Create a new filter with the given input data
      requestBody:
        description: Filter input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.FilterInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.FilterResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      x-codegen-request-body-name: input
  /filters/{id}:
    get:
      tags:
      - filters
      summary: Get a filter by ID
      description: Get a filter's details by its ID
      parameters:
      - name: id
        in: path
        description: Filter ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.FilterResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    delete:
      tags:
      - filters
      summary: Delete a filter
      description: Delete a filter by its ID
      parameters:
      - name: id
        in: path
        description: Filter ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    patch:
      tags:
      - filters
      summary: Update a filter
      description: Update an existing filter's details
      parameters:
      - name: id
        in: path
        description: Filter ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated filter input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.FilterInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.FilterResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      x-codegen-request-body-name: input
  /groups:
    get:
      tags:
      - groups
      summary: List all groups
      description: Get a list of all groups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.GroupResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - groups
      summary: Create a new group
      description: Create a new group with the provided information
      requestBody:
        description: Group information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.GroupInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GroupResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: group
  /groups/{id}:
    get:
      tags:
      - groups
      summary: Get a group by ID
      description: Get details of a group by its ID
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GroupResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - groups
      summary: Delete a group
      description: Delete a group by its ID
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - groups
      summary: Update a group
      description: Update an existing group's information
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated group information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.GroupInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.GroupResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: group
  /groups/{id}/catalogues:
    get:
      tags:
      - groups
      summary: List catalogues in a group
      description: Get a list of all catalogues in a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.CatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - groups
      summary: Add a catalogue to a group
      description: Add a catalogue to a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Catalogue to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.GroupCatalogueInput'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: catalogue
  /groups/{id}/catalogues/{catalogueId}:
    delete:
      tags:
      - groups
      summary: Remove a catalogue from a group
      description: Remove a catalogue from a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      - name: catalogueId
        in: path
        description: Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /groups/{id}/data-catalogues:
    get:
      tags:
      - groups
      summary: List data catalogues in a group
      description: Get a list of all data catalogues in a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.DataCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - groups
      summary: Add a data catalogue to a group
      description: Add a data catalogue to a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Data Catalogue to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.DataCatalogueInput'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: dataCatalogue
  /groups/{id}/data-catalogues/{dataCatalogueId}:
    delete:
      tags:
      - groups
      summary: Remove a data catalogue from a group
      description: Remove a data catalogue from a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      - name: dataCatalogueId
        in: path
        description: Data Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /groups/{id}/tool-catalogues:
    get:
      tags:
      - groups
      summary: List tool catalogues in a group
      description: Get a list of all tool catalogues in a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ToolCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - groups
      summary: Add a tool catalogue to a group
      description: Add a tool catalogue to a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Tool Catalogue to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.GroupToolCatalogueInput'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: toolCatalogue
  /groups/{id}/tool-catalogues/{toolCatalogueId}:
    delete:
      tags:
      - groups
      summary: Remove a tool catalogue from a group
      description: Remove a tool catalogue from a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      - name: toolCatalogueId
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /groups/{id}/users:
    get:
      tags:
      - groups
      summary: List users in a group
      description: Get a list of all users in a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.UserResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - groups
      summary: Add a user to a group
      description: Add a user to a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      requestBody:
        description: User to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.UserGroupInput'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: user
  /groups/{id}/users/{userId}:
    delete:
      tags:
      - groups
      summary: Remove a user from a group
      description: Remove a user from a specific group
      parameters:
      - name: id
        in: path
        description: Group ID
        required: true
        schema:
          type: integer
      - name: userId
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /groups/search:
    get:
      tags:
      - groups
      summary: Search groups by name
      description: Search for groups using a name stub
      parameters:
      - name: name
        in: query
        description: Name stub to search for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.GroupResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /llm-settings:
    get:
      tags:
      - llm-settings
      summary: List all LLM settings
      description: Get a list of all LLM settings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.LLMSettingsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - llm-settings
      summary: Create new LLM settings
      description: Create new LLM settings with the provided information
      requestBody:
        description: LLM settings information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LLMSettingsInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LLMSettingsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: settings
  /llm-settings/{id}:
    get:
      tags:
      - llm-settings
      summary: Get LLM settings by ID
      description: Get details of LLM settings by its ID
      parameters:
      - name: id
        in: path
        description: LLM Settings ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LLMSettingsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - llm-settings
      summary: Delete LLM settings
      description: Delete LLM settings by its ID
      parameters:
      - name: id
        in: path
        description: LLM Settings ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - llm-settings
      summary: Update LLM settings
      description: Update existing LLM settings information
      parameters:
      - name: id
        in: path
        description: LLM Settings ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated LLM settings information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LLMSettingsInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LLMSettingsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: settings
  /llm-settings/search:
    get:
      tags:
      - llm-settings
      summary: Search LLM settings by model name
      description: Search for LLM settings using a model name stub
      parameters:
      - name: model_name
        in: query
        description: Model name stub to search for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.LLMSettingsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /llms:
    get:
      tags:
      - llms
      summary: List all LLMs
      description: Get a list of all LLMs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.LLMResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - llms
      summary: Create a new LLM
      description: Create a new LLM with the provided information
      requestBody:
        description: LLM information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LLMInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LLMResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: llm
  /llms/{id}:
    get:
      tags:
      - llms
      summary: Get an LLM by ID
      description: Get details of an LLM by its ID
      parameters:
      - name: id
        in: path
        description: LLM ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LLMResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - llms
      summary: Delete an LLM
      description: Delete an LLM by its ID
      parameters:
      - name: id
        in: path
        description: LLM ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - llms
      summary: Update an LLM
      description: Update an existing LLM's information
      parameters:
      - name: id
        in: path
        description: LLM ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated LLM information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.LLMInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.LLMResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: llm
  /llms/max-privacy-score:
    get:
      tags:
      - llms
      summary: Get LLMs by maximum privacy score
      description: Get a list of LLMs with privacy score less than or equal to the
        specified value
      parameters:
      - name: max_score
        in: query
        description: Maximum privacy score
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.LLMResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /llms/min-privacy-score:
    get:
      tags:
      - llms
      summary: Get LLMs by minimum privacy score
      description: Get a list of LLMs with privacy score greater than or equal to
        the specified value
      parameters:
      - name: min_score
        in: query
        description: Minimum privacy score
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.LLMResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /llms/privacy-score-range:
    get:
      tags:
      - llms
      summary: Get LLMs by privacy score range
      description: Get a list of LLMs with privacy score within the specified range
      parameters:
      - name: min_score
        in: query
        description: Minimum privacy score
        required: true
        schema:
          type: integer
      - name: max_score
        in: query
        description: Maximum privacy score
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.LLMResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /llms/search:
    get:
      tags:
      - llms
      summary: Search LLMs by name
      description: Search for LLMs using a name stub
      parameters:
      - name: name
        in: query
        description: Name stub to search for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.LLMResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /model-prices:
    get:
      tags:
      - model-prices
      summary: Get all model prices
      description: Get a list of all model prices
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ModelPriceResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - model-prices
      summary: Create a new model price
      description: Create a new model price with the provided information
      requestBody:
        description: Model Price information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ModelPriceInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ModelPriceResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: modelPrice
  /model-prices/{id}:
    get:
      tags:
      - model-prices
      summary: Get a model price by ID
      description: Get details of a model price by its ID
      parameters:
      - name: id
        in: path
        description: Model Price ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ModelPriceResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - model-prices
      summary: Delete a model price
      description: Delete a model price by its ID
      parameters:
      - name: id
        in: path
        description: Model Price ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - model-prices
      summary: Update a model price
      description: Update an existing model price's information
      parameters:
      - name: id
        in: path
        description: Model Price ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated model price information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ModelPriceInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ModelPriceResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: modelPrice
  /model-prices/by-vendor:
    get:
      tags:
      - model-prices
      summary: Get model prices by vendor
      description: Get a list of model prices for a specific vendor
      parameters:
      - name: vendor
        in: query
        description: Vendor name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ModelPriceResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /tags:
    get:
      tags:
      - tags
      summary: List all tags
      description: Get a list of all tags
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.TagResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - tags
      summary: Create a new tag
      description: Create a new tag with the provided information
      requestBody:
        description: Tag information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.TagInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.TagResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: tag
  /tags/{id}:
    get:
      tags:
      - tags
      summary: Get a tag by ID
      description: Get details of a tag by its ID
      parameters:
      - name: id
        in: path
        description: Tag ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.TagResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - tags
      summary: Delete a tag
      description: Delete a tag by its ID
      parameters:
      - name: id
        in: path
        description: Tag ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - tags
      summary: Update a tag
      description: Update an existing tag's information
      parameters:
      - name: id
        in: path
        description: Tag ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated tag information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.TagInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.TagResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: tag
  /tags/search:
    get:
      tags:
      - tags
      summary: Search tags by name
      description: Search for tags using a name stub
      parameters:
      - name: name
        in: query
        description: Name stub to search for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.TagResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /tool-catalogues:
    get:
      tags:
      - tool-catalogues
      summary: List all tool catalogues
      description: Get a list of all tool catalogues
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ToolCatalogueResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    post:
      tags:
      - tool-catalogues
      summary: Create a new tool catalogue
      description: Create a new tool catalogue with the provided information
      requestBody:
        description: Tool Catalogue information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ToolCatalogueInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      x-codegen-request-body-name: toolCatalogue
  /tool-catalogues/{id}:
    get:
      tags:
      - tool-catalogues
      summary: Get a tool catalogue by ID
      description: Get details of a tool catalogue by its ID
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    delete:
      tags:
      - tool-catalogues
      summary: Delete a tool catalogue
      description: Delete a tool catalogue by its ID
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    patch:
      tags:
      - tool-catalogues
      summary: Update a tool catalogue
      description: Update an existing tool catalogue's information
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated Tool Catalogue information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ToolCatalogueInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      x-codegen-request-body-name: toolCatalogue
  /tool-catalogues/{id}/tags:
    get:
      tags:
      - tool-catalogues
      summary: Get tags in a tool catalogue
      description: Get all tags in a specified tool catalogue
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.TagResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    post:
      tags:
      - tool-catalogues
      summary: Add a tag to a tool catalogue
      description: Add a tag to a specified tool catalogue
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Tag to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ToolCatalogueTagInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      x-codegen-request-body-name: tag
  /tool-catalogues/{id}/tags/{tagId}:
    delete:
      tags:
      - tool-catalogues
      summary: Remove a tag from a tool catalogue
      description: Remove a tag from a specified tool catalogue
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      - name: tagId
        in: path
        description: Tag ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /tool-catalogues/{id}/tools:
    get:
      tags:
      - tool-catalogues
      summary: Get tools in a tool catalogue
      description: Get all tools in a specified tool catalogue
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ToolResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
    post:
      tags:
      - tool-catalogues
      summary: Add a tool to a tool catalogue
      description: Add a tool to a specified tool catalogue
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Tool to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ToolCatalogueToolInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      x-codegen-request-body-name: tool
  /tool-catalogues/{id}/tools/{toolId}:
    delete:
      tags:
      - tool-catalogues
      summary: Remove a tool from a tool catalogue
      description: Remove a tool from a specified tool catalogue
      parameters:
      - name: id
        in: path
        description: Tool Catalogue ID
        required: true
        schema:
          type: integer
      - name: toolId
        in: path
        description: Tool ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /tool-catalogues/search:
    get:
      tags:
      - tool-catalogues
      summary: Search tool catalogues
      description: Search for tool catalogues using a query string
      parameters:
      - name: query
        in: query
        description: Search query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ToolCatalogueResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
  /tools:
    get:
      tags:
      - tools
      summary: Get all tools
      description: Get a list of all tools
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ToolResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - tools
      summary: Create a new tool
      description: Create a new tool with the provided information
      requestBody:
        description: Tool information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ToolInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: tool
  /tools/{id}:
    get:
      tags:
      - tools
      summary: Get a tool by ID
      description: Get details of a tool by its ID
      parameters:
      - name: id
        in: path
        description: Tool ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - tools
      summary: Delete a tool
      description: Delete a tool by its ID
      parameters:
      - name: id
        in: path
        description: Tool ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - tools
      summary: Update a tool
      description: Update an existing tool's information
      parameters:
      - name: id
        in: path
        description: Tool ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated tool information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.ToolInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: tool
  /tools/{id}/operations:
    get:
      tags:
      - tools
      summary: Get tool operations
      description: Get all operations associated with a specific tool
      parameters:
      - name: id
        in: path
        description: Tool ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.OperationsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - tools
      summary: Add operation to tool
      description: Add an operation to a specific tool
      parameters:
      - name: id
        in: path
        description: Tool ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Operation to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OperationInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: operation
    delete:
      tags:
      - tools
      summary: Remove operation from tool
      description: Remove an operation from a specific tool
      parameters:
      - name: id
        in: path
        description: Tool ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Operation to remove
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.OperationInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ToolResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: operation
  /tools/by-type:
    get:
      tags:
      - tools
      summary: Get tools by type
      description: Get a list of tools of a specific type
      parameters:
      - name: type
        in: query
        description: Tool Type
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ToolResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /tools/search:
    get:
      tags:
      - tools
      summary: Search tools
      description: Search for tools by name or description
      parameters:
      - name: query
        in: query
        description: Search Query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.ToolResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /users:
    get:
      tags:
      - users
      summary: List all users
      description: Get a list of all users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.UserResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    post:
      tags:
      - users
      summary: Create a new user
      description: Create a new user with the provided information
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.UserInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: user
  /users/{id}:
    get:
      tags:
      - users
      summary: Get a user by ID
      description: Get details of a user by their ID
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    delete:
      tags:
      - users
      summary: Delete a user
      description: Delete a user by their ID
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
    patch:
      tags:
      - users
      summary: Update a user
      description: Update an existing user's information
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Updated user information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.UserInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
      x-codegen-request-body-name: user
  /users/{id}/catalogues:
    get:
      tags:
      - users
      summary: Get user accessible catalogues
      description: Get a list of all catalogues accessible to a user
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UserAccessibleCataloguesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /users/{userId}/apps:
    get:
      tags:
      - apps
      summary: Get apps by user ID
      description: Get a list of apps for a specific user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.AppResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /users/{userId}/apps/count:
    get:
      tags:
      - apps
      summary: Count apps by user ID
      description: Get the total number of apps for a specific user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /users/{userId}/groups:
    get:
      tags:
      - groups
      summary: Get groups for a user
      description: Get a list of all groups a specific user belongs to
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api.GroupResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /vendors/embedders:
    get:
      tags:
      - vendors
      summary: Get available embedders
      description: Get a list of available embedders
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.VendorListResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /vendors/llm-drivers:
    get:
      tags:
      - vendors
      summary: Get available LLM drivers
      description: Get a list of available LLM drivers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.VendorListResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
  /vendors/vector-stores:
    get:
      tags:
      - vendors
      summary: Get available vector stores
      description: Get a list of available vector stores
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.VendorListResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
      security:
      - BearerAuth: []
components:
  schemas:
    analytics.ChartData:
      type: object
      properties:
        data:
          type: array
          items:
            type: number
        labels:
          type: array
          items:
            type: string
    analytics.Dataset:
      type: object
      properties:
        data:
          type: array
          items:
            type: number
        label:
          type: string
        yAxisID:
          type: string
    analytics.MultiAxisChartData:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/analytics.Dataset'
        labels:
          type: array
          items:
            type: string
    analytics.VendorModelCost:
      type: object
      properties:
        currency:
          type: string
        model:
          type: string
        totalCost:
          type: number
        vendor:
          type: string
    api.AppInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                datasource_ids:
                  type: array
                  items:
                    type: integer
                description:
                  type: string
                llm_ids:
                  type: array
                  items:
                    type: integer
                name:
                  type: string
                user_id:
                  type: integer
            type:
              type: string
      description: App input model
    api.AppResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            credential_id:
              type: integer
            datasource_ids:
              type: array
              items:
                type: integer
            description:
              type: string
            llm_ids:
              type: array
              items:
                type: integer
            name:
              type: string
            user_id:
              type: integer
        id:
          type: string
        type:
          type: string
      description: App response model
    api.CatalogueInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                name:
                  type: string
            type:
              type: string
      description: Catalogue input model
    api.CatalogueLLMInput:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
      description: Catalogue-LLM relationship input model
    api.CatalogueResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            llm_names:
              type: array
              items:
                type: string
            name:
              type: string
        id:
          type: string
        type:
          type: string
      description: Catalogue response model
    api.ChatHistoryRecordInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                chat_id:
                  type: integer
                name:
                  type: string
                session_id:
                  type: string
                user_id:
                  type: integer
            type:
              type: string
      description: Chat History Record input model
    api.ChatHistoryRecordListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api.ChatHistoryRecordResponse'
      description: Chat History Record list response model
    api.ChatHistoryRecordResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            chat_id:
              type: integer
            name:
              type: string
            session_id:
              type: string
            user_id:
              type: integer
        id:
          type: string
        type:
          type: string
      description: Chat History Record response model
    api.ChatInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                group_ids:
                  type: array
                  items:
                    type: integer
                llm_id:
                  type: integer
                llm_settings_id:
                  type: integer
                name:
                  type: string
            type:
              type: string
      description: Chat input model
    api.ChatResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            groups:
              type: array
              items:
                $ref: '#/components/schemas/api.GroupResponse'
            llm_id:
              type: integer
            llm_settings_id:
              type: integer
            name:
              type: string
        id:
          type: string
        type:
          type: string
      description: Chat response model
    api.CredentialInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                active:
                  type: boolean
            type:
              type: string
      description: Credential input model
    api.CredentialResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            active:
              type: boolean
            key_id:
              type: string
            secret:
              type: string
        id:
          type: string
        type:
          type: string
      description: Credential response model
    api.DataCatalogueDatasourceInput:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
      description: Data Catalogue-Datasource relationship input model
    api.DataCatalogueInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                icon:
                  type: string
                long_description:
                  type: string
                name:
                  type: string
                short_description:
                  type: string
            type:
              type: string
      description: Data Catalogue input model
    api.DataCatalogueResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            datasources:
              type: array
              items:
                $ref: '#/components/schemas/api.DatasourceResponse'
            icon:
              type: string
            long_description:
              type: string
            name:
              type: string
            short_description:
              type: string
            tags:
              type: array
              items:
                $ref: '#/components/schemas/api.TagResponse'
        id:
          type: string
        type:
          type: string
      description: Data Catalogue response model
    api.DataCatalogueTagInput:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
      description: Data Catalogue-Tag relationship input model
    api.DatasourceInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                active:
                  type: boolean
                db_conn_api_key:
                  type: string
                db_conn_string:
                  type: string
                db_name:
                  type: string
                db_source_type:
                  type: string
                embed_api_key:
                  type: string
                embed_model:
                  type: string
                embed_url:
                  type: string
                embed_vendor:
                  type: string
                icon:
                  type: string
                long_description:
                  type: string
                name:
                  type: string
                privacy_score:
                  type: integer
                short_description:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                url:
                  type: string
                user_id:
                  type: integer
            type:
              type: string
      description: Datasource input model
    api.DatasourceResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            active:
              type: boolean
            db_conn_api_key:
              type: string
            db_conn_string:
              type: string
            db_name:
              type: string
            db_source_type:
              type: string
            embed_api_key:
              type: string
            embed_model:
              type: string
            embed_url:
              type: string
            embed_vendor:
              type: string
            icon:
              type: string
            long_description:
              type: string
            name:
              type: string
            privacy_score:
              type: integer
            short_description:
              type: string
            tags:
              type: array
              items:
                $ref: '#/components/schemas/api.TagResponse'
            url:
              type: string
            user_id:
              type: integer
        id:
          type: string
        type:
          type: string
      description: Datasource response model
    api.ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              detail:
                type: string
              title:
                type: string
      description: Error response model
    api.FilterInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                description:
                  type: string
                name:
                  type: string
                script:
                  type: array
                  items:
                    type: integer
            type:
              type: string
      description: Filter input model
    api.FilterResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            description:
              type: string
            name:
              type: string
            script:
              type: array
              items:
                type: integer
        id:
          type: string
        type:
          type: string
      description: Filter response model
    api.GroupCatalogueInput:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
      description: Group-Catalogue relationship input model
    api.GroupInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                name:
                  type: string
            type:
              type: string
      description: Group input model
    api.GroupResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
        id:
          type: string
        type:
          type: string
      description: Group response model
    api.GroupToolCatalogueInput:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
      description: Group-ToolCatalogue relationship input model
    api.LLMInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                active:
                  type: boolean
                api_endpoint:
                  type: string
                api_key:
                  type: string
                logo_url:
                  type: string
                long_description:
                  type: string
                name:
                  type: string
                privacy_score:
                  type: integer
                short_description:
                  type: string
                vendor:
                  type: string
            type:
              type: string
      description: LLM input model
    api.LLMResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            active:
              type: boolean
            api_endpoint:
              type: string
            api_key:
              type: string
            logo_url:
              type: string
            long_description:
              type: string
            name:
              type: string
            privacy_score:
              type: integer
            short_description:
              type: string
            vendor:
              type: string
        id:
          type: string
        type:
          type: string
      description: LLM response model
    api.LLMSettingsInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                max_length:
                  type: integer
                max_tokens:
                  type: integer
                metadata:
                  type: object
                  additionalProperties: true
                min_length:
                  type: integer
                model_name:
                  type: string
                repetition_penalty:
                  type: number
                seed:
                  type: integer
                stop_words:
                  type: array
                  items:
                    type: string
                temperature:
                  type: number
                top_k:
                  type: integer
                top_p:
                  type: number
            type:
              type: string
    api.LLMSettingsResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            max_length:
              type: integer
            max_tokens:
              type: integer
            metadata:
              type: object
              additionalProperties: true
            min_length:
              type: integer
            model_name:
              type: string
            repetition_penalty:
              type: number
            seed:
              type: integer
            stop_words:
              type: array
              items:
                type: string
            temperature:
              type: number
            top_k:
              type: integer
            top_p:
              type: number
        id:
          type: string
        type:
          type: string
    api.ModelPriceInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                cpt:
                  type: number
                currency:
                  type: string
                model_name:
                  type: string
                vendor:
                  type: string
            type:
              type: string
      description: Model Price input model
    api.ModelPriceResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            cpt:
              type: number
            currency:
              type: string
            model_name:
              type: string
            vendor:
              type: string
        id:
          type: string
        type:
          type: string
      description: Model Price response model
    api.OperationInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                operation:
                  type: string
            type:
              type: string
      description: Operation input model
    api.OperationsResponse:
      type: object
      properties:
        operations:
          type: array
          items:
            type: string
      description: Tool operations response model
    api.TagInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                name:
                  type: string
            type:
              type: string
      description: Tag input model
    api.TagResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
        id:
          type: string
        type:
          type: string
      description: Tag response model
    api.ToolCatalogueInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                icon:
                  type: string
                long_description:
                  type: string
                name:
                  type: string
                short_description:
                  type: string
            type:
              type: string
      description: Tool Catalogue input model
    api.ToolCatalogueResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            icon:
              type: string
            long_description:
              type: string
            name:
              type: string
            short_description:
              type: string
            tags:
              type: array
              items:
                $ref: '#/components/schemas/api.TagResponse'
            tools:
              type: array
              items:
                $ref: '#/components/schemas/api.ToolResponse'
        id:
          type: string
        type:
          type: string
      description: Tool Catalogue response model
    api.ToolCatalogueTagInput:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
      description: Tool Catalogue-Tag relationship input model
    api.ToolCatalogueToolInput:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
      description: Tool Catalogue-Tool relationship input model
    api.ToolInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                auth_key:
                  type: string
                auth_schema_name:
                  type: string
                description:
                  type: string
                name:
                  type: string
                oas_spec:
                  type: array
                  items:
                    type: integer
                privacy_score:
                  type: integer
                tool_type:
                  type: string
            type:
              type: string
      description: Tool input model
    api.ToolResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            auth_key:
              type: string
            auth_schema_name:
              type: string
            description:
              type: string
            name:
              type: string
            oas_spec:
              type: array
              items:
                type: integer
            operations:
              type: array
              items:
                type: string
            privacy_score:
              type: integer
            tool_type:
              type: string
        id:
          type: string
        type:
          type: string
      description: Tool response model
    api.UserAccessibleCataloguesResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            catalogues:
              type: array
              items:
                $ref: '#/components/schemas/api.CatalogueResponse'
        id:
          type: string
        type:
          type: string
      description: User accessible catalogues response model
    api.UserGroupInput:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
      description: User-group relationship input model
    api.UserInput:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string
            type:
              type: string
      description: User input model
    api.UserResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            email:
              type: string
            name:
              type: string
        id:
          type: string
        type:
          type: string
      description: User response model
    api.VendorListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
      description: Vendor list response model
  securitySchemes:
    BearerAuth:
      type: apiKey
      name: Authorization
      in: header
x-original-swagger-version: "2.0"
